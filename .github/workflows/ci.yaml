name: CI

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Run sample script
        run: echo Hello, world

  lint:
    name: Perform lint check
    needs: [start]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle-

      - name: Make Gradle executable
        run: chmod +x ./gradlew
  
      - name: Run lint
        run: ./gradlew lintDebug
  
      - name: Upload html test report
        uses: actions/upload-artifact@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          name: lint.html
          path: app/build/reports/lint-results-debug.html

  unit-test:
    name: Perform Unit Testing
    needs: [lint]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Run tests
        run: ./gradlew test
  
      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          name: unit_test_report
          path: app/build/reports/test/testDebugUnitTest/

  instrumentation-test:
    name: Perform Instrumentation Testing
    needs: [unit-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      # Gradle v8.0.0 requires java JDK v17
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Run espresso tests
        uses: reactivecircus/android-emulator-runner@v2 # 3rd party tool
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          api-level: 33
          script: ./gradlew connectedCheck
  
      - name: Upload Instrumentation Test report
        uses: actions/upload-artifact@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          name: instrumentation_test_report
          path: app/build/reports/androidTests/connected

  static-code-analysis:
    name: Perform static code analysis
    needs: [instrumentation-test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: SonarCloud Scan # sonarcloud properties in gradle.properties file
        run: ./gradlew app:sonarqube -Dsonar.login=${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  debug-apk:
    name: Generate Debug APK
    needs: [static-code-analysis]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Set up Java JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
  
      - name: Build debug APK
        run: ./gradlew assembleDebug --stacktrace
  
      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          check-latest: true
          name: sample-app.apk
          path: app/build/outputs/apk/debug/app-debug.apk
