name: CD

on:
  workflow_run:
    workflows: ["ci"]
    types:
      - completed

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Run sample script
        run: echo CD started
  apk:
    name: Build Release signed APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - run: |
          download_url="https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz"
          wget -O $RUNNER_TEMP/java_package.tar.gz $download_url
      - uses: actions/setup-java@v4
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '17'
          architecture: x64

      - name: Build Release APK
        run: ./gradlew assembleRelease

#      - name: Sign APK
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/apk/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#        env:
#          BUILD_TOOLS_VERSION: "30.0.2"
#
      - name: Upload Signed APK
        uses: actions/upload-artifact@v2
        with:
          name: sample-app-signed  # Artifact Name
          path: app/build/outputs/apk/release/*.apk

  bundle:
    name: Build Release AAB
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - run: |
          download_url="https://download.oracle.com/java/17/latest/jdk-17_linux-x64_bin.tar.gz"
          wget -O $RUNNER_TEMP/java_package.tar.gz $download_url
      - uses: actions/setup-java@v4
        with:
          distribution: 'jdkfile'
          jdkFile: ${{ runner.temp }}/java_package.tar.gz
          java-version: '17'
          architecture: x64

      - name: Build Release AAB
        run: ./gradlew bundleRelease

#      - name: Sign app bundle
#        uses: r0adkll/sign-android-release@v1
#        id: sign_app
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
#          alias: ${{ secrets.KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
#          keyPassword: ${{ secrets.KEY_PASSWORD }}
#        env:
#          BUILD_TOOLS_VERSION: "30.0.2"

      - name: Upload Signed AAB
        uses: actions/upload-artifact@v2
        with:
          name: sample-app-bundle  # Artifact Name
          path: app/build/outputs/bundle/release/app-release.aab

#  deploy:
#    name: Deploy release AAB on Playstore
#    needs: [apk]
#    runs-on: ubuntu-latest
#    steps:
#      - name: Create service_account.json
#        run: echo '${{ secrets.SERVICE_ACCOUNT_JSON }}' > service_account.json
#
#      - name: Deploy to Play Store
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: service_account.json
#          packageName: ${{ github.event.inputs.app_id }}
#          releaseFiles: app/build/outputs/bundle/release/*.aab
#          track: internal
#          whatsNewDirectory: whatsnew/
#          mappingFile: app/build/outputs/mapping/release/mapping.txt
#          inAppUpdatePriority: 5
